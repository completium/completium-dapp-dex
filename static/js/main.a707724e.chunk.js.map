{"version":3,"sources":["dapp.js","settings.js","dexstate.js","components/WalletButton.js","components/HeaderBar.js","components/SnackMsg.js","components/CoinItem.js","components/VerticalDivider.js","components/Dex.js","components/PlusDivider.js","components/Provider.js","components/Redeemer.js","App.js","reportWebVitals.js","index.js"],"names":["constate","appName","React","useState","wallet","tezos","accountPkh","setState","ready","Boolean","useEffect","ThanosWallet","onAvailabilityChange","available","connect","useCallback","network","opts","a","Error","tzs","toTezos","pkh","alert","message","v","DAppProvider","useWallet","useTezos","useAccountPkh","useReady","useConnect","dexContract","Tezos","TezosToolkit","account","fee","balance","balances","token","addr","poolvalue","totalqty","totallqt","liquidity","left","coin","amount","max","right","provider","maxb","xtzamount","maxxtzb","liqtoken","redeemer","dexState","setDexState","computeAmount","aA","qA","qB","f","g","computeFee","aB","aBnofee","Math","ceil","computeTok2TokAmount","qTA","qTB","alpha","computeAmounts","state","parseFloat","tA","tB","aF","parseInt","floor","computeTok2TokFee","console","log","isPoolEmpty","computeMintedLQT","xlq","Intl","NumberFormat","maximumSignificantDigits","format","computeRedeemedLQT","liqamount","ratio","forceRetrieveTokenBalance","address","contract","at","then","myContract","storage","myStorage","get","value","undefined","toString","catch","error","JSON","stringify","retrieveTokenBalance","setBalance","isReady","loadDexTokens","c","s","forEach","l","k","m","name","iconurl","loadLiquidity","resetDexCoins","resetProvider","resetRedeemer","getXTZFor","city","qty","srctotalqty","dsttotalqty","setLeftCoin","setRightCoin","setLeftAmount","isNaN","switchMax","setProviderCoin","setProviderAmount","setProviderXTZAmount","charAt","length","switchProviderMax","switchProviderXTZMax","setRedeemerCoin","setRedeemerMax","setRedeemerAmount","DexProvider","useDexStateContext","WalletButton","props","Button","variant","color","disableElevation","size","style","position","onClick","handleConnect","Link","href","rel","underline","backgroundColor","fontWeight","HeaderBar","visible","useMediaQuery","dark","theme","palette","type","AppBar","boxShadow","opacity","Toolbar","Typography","fontFamily","Grid","container","justify","alignItems","item","visibility","textAlign","appTitle","target","component","Alert","elevation","SnackMsg","Snackbar","open","severity","secondary","main","CoinItem","useTheme","icon","process","direction","spacing","xs","src","height","width","paddingLeft","show","textTransform","maximumFractionDigits","VerticialDivider","Divider","orientation","flexItem","borderStyle","borderWidth","borderRadius","borderColor","divider","top","useStyles","makeStyles","formControl","margin","minWidth","selectEmpty","marginTop","getBalanceFor","LeftEx","xtzbalance","classes","cities","concat","Object","keys","filter","paddingTop","FormControl","className","InputLabel","id","Select","labelId","onChange","event","label","labelWidth","MenuItem","map","paddingBottom","Switch","checked","disabled","TextField","InputProps","readOnly","helperText","RightEx","sent","exbalance","paddingRight","Exchange","initialized","setInititialized","lcoin","rcoin","dex","methods","exchange","send","op","openSnack","receipt","closeSnack","tz","getBalance","fa12","fa12params","approve","toTransferParams","kind","OpKind","TRANSACTION","dexparams","batch","Paper","lbalance","rbalance","cannotExchange","PlusDivider","marginLeft","svg","errorAmount","startAdornment","InputAdornment","on","Provider","addLiquidity","padding","Redeemer","removeLiquidity","getComponent","PageRouter","viewSnack","setViewSnack","setInitialized","computeBalance","setComputeBalance","setValue","prefersDarkMode","useMemo","createMuiTheme","light","contrastText","ThemeProvider","CssBaseline","Container","Tabs","indicatorColor","textColor","newValue","aria-label","Tab","App","Suspense","fallback","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a707724e.chunk.js","sourcesContent":["import React from 'react';\nimport constate from 'constate';\nimport { ThanosWallet } from '@thanos-wallet/dapp';\n\nexport const [\n  DAppProvider,\n  useWallet,\n  useTezos,\n  useAccountPkh,\n  useReady,\n  useConnect,\n] = constate(\n  useDApp,\n  (v) => v.wallet,\n  (v) => v.tezos,\n  (v) => v.accountPkh,\n  (v) => v.ready,\n  (v) => v.connect\n);\n\nfunction useDApp({ appName }) {\n  const [{ wallet, tezos, accountPkh }, setState] = React.useState(() => ({\n    wallet: null,\n    tezos: null,\n    accountPkh: null,\n  }));\n\n  const ready = Boolean(tezos);\n\n  React.useEffect(() => {\n    return ThanosWallet.onAvailabilityChange((available) => {\n      setState({\n        wallet: available ? new ThanosWallet(appName) : null,\n        tezos: null,\n        accountPkh: null,\n      });\n    });\n  }, [setState, appName]);\n\n  const connect = React.useCallback(\n    async (network, opts) => {\n      try {\n        if (!wallet) {\n          throw new Error('Thanos Wallet not available');\n        }\n        await wallet.connect(network, opts);\n        const tzs = wallet.toTezos();\n        const pkh = await tzs.wallet.pkh();\n        setState({\n          wallet,\n          tezos: tzs,\n          accountPkh: pkh,\n        });\n      } catch (err) {\n        alert(`Failed to connect ThanosWallet: ${err.message}`);\n      }\n    },\n    [setState, wallet]\n  );\n\n  return {\n    wallet,\n    tezos,\n    accountPkh,\n    ready,\n    connect,\n  };\n}\n\nexport function useOnBlock(tezos, callback) {\n  const blockHashRef = React.useRef();\n\n  React.useEffect(() => {\n    let sub;\n    spawnSub();\n    return () => sub.close();\n\n    function spawnSub() {\n      sub = tezos.stream.subscribe('head');\n\n      sub.on('data', (hash) => {\n        if (blockHashRef.current && blockHashRef.current !== hash) {\n          callback(hash);\n        }\n        blockHashRef.current = hash;\n      });\n      sub.on('error', (err) => {\n        if (process.env.NODE_ENV === 'development') {\n          console.error(err);\n        }\n        sub.close();\n        spawnSub();\n      });\n    }\n  }, [tezos, callback]);\n}","export const appTitle = \"Exchange city coins!\"\n\nexport const network = \"delphinet\"\n\nexport const appName = \"CityDexCorp.\"\n\nexport const dexContract = 'KT1J48AfBi8NwNaFQM1AXTvordRgSRJxK313'\n\nexport const cities = [ 'tezos', 'paris', 'london', 'moscow', 'nyc', 'tokyo', 'sydney', 'athenes', 'rio', 'rome' ];\n\nexport const getCityName = (city) => {\n  switch(city) {\n    case 'tezos'   : return 'Tezos';\n    case 'paris'   : return 'Paris';\n    case 'london'  : return 'London';\n    case 'moscow'  : return 'Moscow';\n    case 'nyc'     : return 'New York City';\n    case 'tokyo'   : return 'Tokyo';\n    case 'sydney'  : return 'Sydney';\n    case 'athenes' : return 'Athens';\n    case 'rio'     : return 'Rio de Janeiro';\n    case 'rome'    : return 'Rome';\n    default : return '';\n  }\n}\n\nexport const getCoinLabel = (city) => {\n  switch(city) {\n    case 'tezos'   : return 'XTZ';\n    case 'paris'   : return 'XPA';\n    case 'london'  : return 'XLD';\n    case 'moscow'  : return 'XMO';\n    case 'nyc'     : return 'XNY';\n    case 'tokyo'   : return 'XTK';\n    case 'sydney'  : return 'XSD';\n    case 'athenes' : return 'XAT';\n    case 'rio'     : return 'XRI';\n    case 'rome'    : return 'XRO';\n    default : return '';\n  }\n}\n\nexport const getBalanceFor = (coin) => {\n  const balance = {\n  'XLD' : '3450',\n  'XPA' : '1230',\n  'XNY' : '560',\n  'XRO' : '0',\n  'XTK' : '0',\n  'XAT' : '0',\n  'XMO' : '0',\n  'XSD' : '345',\n  'XRI' : '0',\n  };\n  return balance[coin];\n}","import { useState } from 'react';\nimport constate from 'constate';\nimport { useAccountPkh, useReady } from './dapp';\nimport { network, dexContract } from './settings';\nimport { TezosToolkit } from '@taquito/taquito';\n\nconst Tezos = new TezosToolkit('https://'+network+'-tezos.giganode.io');\n\nexport function useDexState() {\n  const account = useAccountPkh();\n  const ready = useReady();\n  const fee = 0.003;\n  const [dexState, setDexState] = useState({\n    balance : '',\n    balances : {},\n    token     : {\n      'XLD' : { addr: 'KT1MePDQK3VQooqSEwN3sN1WqyMiiGBKGkNX', poolvalue: '1976000000', totalqty: '1923300', totallqt: '1000000' },\n      'XPA' : { addr: 'KT1H8JUiFbvEMycCuG5sZfCGHkN7vgfLAs3n', poolvalue: '1288000000', totalqty: '1756020', totallqt: '1000000' },\n      'XNY' : { addr: 'KT1', poolvalue: '1852000000', totalqty: '1360000', totallqt: '1000000' },\n      'XRO' : { addr: 'KT1', poolvalue: '447000000',  totalqty: '1006540', totallqt: '1000000' },\n      'XTK' : { addr: 'KT1', poolvalue: '1348000000', totalqty: '998510',  totallqt: '1000000' },\n      'XAT' : { addr: 'KT1', poolvalue: '162000000',  totalqty: '572840',  totallqt: '1000000' },\n      'XMO' : { addr: 'KT1', poolvalue: '94000000',   totalqty: '551000',  totallqt: '1000000' },\n      /* 'XSD' : { addr: 'KT1', poolvalue: '640',  totalqty: '409060',  totallqt: '1000000' }, */\n      'XSD' : { addr: 'KT1', poolvalue: '0',  totalqty: '0',  totallqt: '0' },\n      'XRI' : { addr: 'KT1', poolvalue: '97000000',   totalqty: '227830',  totallqt: '1000000' },\n    },\n    liquidity : {\n      'XLD' : 1000000,\n      'XPA' : 1000000,\n    },\n    left : {\n      coin : '',\n      amount : '',\n      max : false\n    },\n    right : {\n      coin : '',\n      amount : '',\n      fee : ''\n    },\n    provider : {\n      coin: '',\n      amount: '',\n      maxb: false,\n      xtzamount: '',\n      maxxtzb: false,\n      liqtoken: ''\n    },\n    redeemer : {\n      coin: '',\n      liqtoken: '',\n      max: false,\n      amount: '',\n      xtzamount: '',\n    }\n  });\n  const isReady = () => {\n    return !(dexState.token === []);\n  }\n  const loadLiquidity = () => {\n    Tezos.contract.at(dexContract)\n      .then(c => {\n        return c.storage()\n      .then (s => {\n        var liquidity = {};\n        s.liquidity.forEach((l,k,m) => {\n          /* k = {0: 'XPA', 1: 'tz1Lc2qBKEWCBeDU8npG6zCeCqpmaegRi6Jg'} */\n          if (k[1] === account) {\n            liquidity[k[0]] = l.toString()\n          }\n        });\n        console.log('loaded liquidity:', liquidity);\n        setDexState(state => { return {\n          ...state,\n          liquidity: liquidity,\n        }})\n      })})\n      .catch(error => console.log(`Error: ${JSON.stringify(error, null, 2)}`));\n  }\n  const loadDexTokens = () => {\n    Tezos.contract.at(dexContract)\n      .then(c => {\n        return c.storage()\n      .then (s => {\n        var token = {};\n        s.token.forEach((l,k,m) => {\n          token[k] = {\n            addr: l.addr,\n            name: l.name,\n            iconurl: l.iconurl,\n            poolvalue: l.poolvalue.toString(),\n            totalqty: l.totalqty.toString(),\n            totallqt: l.totallqt.toString()\n          }\n        });\n        console.log('loaded tokens:', token);\n        setDexState(state => {\n          return {\n            ...state,\n            token: token,\n        }})\n      })})\n      .catch(error => console.log(`Error: ${JSON.stringify(error, null, 2)}`));\n  }\n  /* compute amount of token B and fee when providing qA amount of token A */\n  const computeAmount = (aA,qA,qB,f) => {\n    const g = 1 - f;\n    return qB * g * aA / (qA + g * aA);\n  }\n  const computeFee = (aA,qA,qB,f) => {\n    const aB      = computeAmount(aA,qA,qB,f);\n    const aBnofee = computeAmount(aA,qA,qB,0);\n    const fee     = Math.ceil(aBnofee-aB);\n    return fee;\n  }\n  const computeTok2TokAmount = (aA,qA,qB,f,qTA,qTB) => {\n    const g = 1 - f;\n    const alpha = qTB / (qTA * g * g);\n    return qB * aA / (alpha * qA + aA * (1 + alpha * g));\n  }\n  const computeTok2TokFee = (aA,qA,qB,f,qTA,qTB) => {\n    const aB      = computeTok2TokAmount(aA,qA,qB,f,qTA,qTB);\n    const aBnofee = computeTok2TokAmount(aA,qA,qB,0,qTA,qTB);\n    const fee     = Math.ceil(aBnofee-aB);\n    return fee;\n  }\n  const computeAmounts = (state) => {\n    if (state.left.coin !== '' && state.left.amount !== '' && state.right.coin !== '') {\n      var [ tA, aA, qA, tB, qB ] = [ state.left.coin, parseFloat(state.left.amount), 0, state.right.coin, 0 ];\n      var aB = 0;\n      var aF = 0;\n      if (tA === 'XTZ') {\n        aA = aA * 1000000;\n        qA = parseInt(state.token[tB].poolvalue);\n        qB = parseInt(state.token[tB].totalqty);\n        aB = Math.floor(computeAmount(aA,qA,qB,fee));\n        aF = computeFee(aA,qA,qB,fee);\n      } else if (tB === 'XTZ') {\n        qA = parseInt(state.token[tA].totalqty);\n        qB = parseInt(state.token[tA].poolvalue);\n        aB = Math.floor(computeAmount(aA,qA,qB,fee));\n        aF = computeFee(aA,qA,qB,fee);\n      } else {\n        qA   = parseInt(state.token[tA].totalqty);\n        const qTA  = parseInt(state.token[tA].poolvalue);\n        const qTB  = parseInt(state.token[tB].poolvalue);\n        qB   = parseInt(state.token[tB].totalqty);\n        aB   = Math.floor(computeTok2TokAmount(aA,qA,qB,fee,qTA,qTB));\n        aF   = computeTok2TokFee(aA,qA,qB,fee,qTA,qTB);\n      };\n      console.log(`aB: ${aB}`);\n      console.log(`aF: ${aF}`);\n      return {\n        ...state,\n        right: { coin: state.right.coin, amount : aB, fee : aF },\n      }\n    }\n    else return state;\n  };\n  const isPoolEmpty = (coin) => {\n    if (coin !== '') {\n      const totalqty = dexState.token[coin].totalqty;\n      const poolvalue = dexState.token[coin].poolvalue;\n      return totalqty === '0' && poolvalue === '0';\n    } else {\n      return true;\n    }\n  };\n  const computeMintedLQT = (state) => {\n    if (isPoolEmpty(state.provider.coin)) {\n      var xlq = 0;\n      if (state.provider.amount !== '' && state.provider.xtzamount !== '') {\n        xlq = 1000000;\n      };\n      return {\n        ...state,\n        provider: {\n          coin:   state.provider.coin,\n          amount: state.provider.amount,\n          maxb:   state.provider.maxb,\n          xtzamount: state.provider.xtzamount,\n          maxxtzb: state.provider.maxxtzb,\n          liqtoken: xlq\n        },\n      }\n    } else {\n      var tA = '';\n      var aA = 0;\n      var qA = 0;\n      var tB = '';\n      var qB = 0;\n      var aB = 0;\n      if (state.provider.amount !== '') {\n        tA = state.provider.coin;\n        aA = state.provider.amount;\n        qA = parseInt(state.token[tA].totalqty);\n        qB = parseInt(state.token[tA].poolvalue);\n        aB = new Intl.NumberFormat('en-IN', { maximumSignificantDigits: 6 }).format(computeAmount(aA, qA, qB, 0) / 1000000);\n        const xlq = Math.floor(state.token[tA].totallqt * aB * 1000000 / state.token[tA].poolvalue);\n        return {\n          ...state,\n          provider: {\n            coin:   state.provider.coin,\n            amount: state.provider.amount,\n            maxb:   state.provider.maxb,\n            xtzamount: aB,\n            maxxtzb: state.provider.maxxtzb,\n            liqtoken: xlq\n          },\n        }\n      } else if (state.provider.xtzamount !== '') {\n        tB = state.provider.coin;\n        aA = parseFloat(state.provider.xtzamount) * 1000000;\n        console.log(`aA: ${aA}`);\n        console.log(`xtzamount: ${state.provider.xtzamount}`);\n        qA = parseInt(state.token[tB].poolvalue);\n        qB = parseInt(state.token[tB].totalqty);\n        aB = Math.floor(computeAmount(aA,qA,qB,0));\n        const xlq = Math.floor(state.token[tB].totallqt * parseInt(state.provider.xtzamount) / state.token[tB].poolvalue);\n        return {\n          ...state,\n          provider: {\n            coin:   state.provider.coin,\n            amount: aB,\n            maxb:   state.provider.maxb,\n            xtzamount: state.provider.xtzamount,\n            maxxtzb: state.provider.maxxtzb,\n            liqtoken: xlq\n          },\n        }\n      } else {\n        return state;\n      };\n    }\n  };\n  const computeRedeemedLQT = (state) => {\n    const liqamount = state.redeemer.liqtoken;\n    const coin = state.redeemer.coin;\n    if (liqamount !== '' && coin !== '') {\n      const poolvalue = state.token[coin].poolvalue;\n      const totalqty = state.token[coin].totalqty;\n      const totallqt = state.token[coin].totallqt;\n      const ratio = liqamount / totallqt;\n      const amount    = Math.floor(ratio * totalqty);\n      const xtzamount = new Intl.NumberFormat({ maximumSignificantDigits: 6 }).format(ratio * poolvalue / 1000000);\n      return {\n        ...state,\n        redeemer: {\n          coin: state.redeemer.coin,\n          liqtoken: liqamount,\n          max: state.redeemer.max,\n          amount: amount,\n          xtzamount: xtzamount,\n        },\n      }\n    } else {\n      return state;\n    }\n  };\n  const getXTZFor = (city,qty) => {\n    var srctotalqty = dexState.token[city].totalqty;\n    var dsttotalqty = dexState.token[city].poolvalue;\n    return computeAmount(1000000,srctotalqty,dsttotalqty,fee) / 1000000;\n  }\n  const forceRetrieveTokenBalance = (coin) => {\n    const address = dexState.token[coin].addr;\n      Tezos.contract.at(address)\n      .then( myContract => {\n        return myContract.storage()\n      .then ( myStorage => {\n        //When called on a map, the get method returns the value directly\n        myStorage['ledger'].get(account).then(value => {\n          if (value === undefined) {\n            setDexState(state => {\n              var balances = state.balances;\n              balances[coin] = '0';\n              return {\n                ...state,\n                balances : balances,\n              }\n            });\n          } else {\n            setDexState(state => {\n              var balances = state.balances;\n              balances[coin] = value.toString();\n              return {\n                ...state,\n                balances : balances,\n              }\n            });\n          }\n        });\n      })})\n      .catch(error => console.log(`Error: ${JSON.stringify(error, null, 2)}`));\n  }\n  const retrieveTokenBalance = (coin) => {\n    if (ready && coin !== '' && coin !== 'XTZ' && !(coin in dexState.balances)) {\n      forceRetrieveTokenBalance(coin);\n    }\n  }\n  const setLeftCoin = (coin) => { setDexState(state => {\n    return computeAmounts({\n      ...state,\n      left: { coin: coin, amount : '', max: false },\n      right: { coin: state.right.coin, amount : '', fee : '' },\n    })});\n    retrieveTokenBalance(coin);\n  };\n  const setRightCoin = (coin) => { setDexState(state => {\n    return computeAmounts({\n      ...state,\n      right : { coin: coin, amount : '', fee : '' },\n    })});\n    retrieveTokenBalance(coin);\n  };\n  const resetDexCoins = () => {\n    setDexState(state => {\n      return {\n        ...state,\n        left: { ...state.left, amount : '', max: false },\n        right : { ...state.right, amount : '', fee : '' },\n      }\n    });\n  }\n  const resetProvider = () => {\n    setDexState(state => {\n      return {\n        ...state,\n        provider : {\n          ...state.provider,\n          amount: '',\n          maxb: false,\n          xtzamount: '',\n          maxxtzb: false,\n          liqtoken: ''\n        },\n      }\n    });\n  }\n  const resetRedeemer = () => {\n    setDexState(state => {\n      return {\n        ...state,\n        redeemer : {\n          ...state.redeemer,\n          amount: '',\n          xtzamount: '',\n          liqtoken: '',\n          max: false,\n          maxxtzb: false,\n        },\n      }\n    });\n  }\n  const setLeftAmount = (amount) => {\n    if (isNaN(amount)) {\n      setDexState(state => {\n        return {\n          ...state,\n          left : { coin: state.left.coin, amount : '', max: state.left.max },\n          right : { coin: state.right.coin, amount : '', fee : '' },\n      }})\n    } else {\n      setDexState (state => {\n        return computeAmounts({\n          ...state,\n          left : { coin: state.left.coin, amount : (parseFloat(amount)>0)?amount:'0', max: state.left.max },\n          right : { coin: state.right.coin, amount : '', fee : '' },\n      })})};\n    }\n  const switchMax = (balance) => { setDexState (state => {\n    return computeAmounts({\n      ...state,\n      left : { coin: state.left.coin, amount : state.left.max?'':balance, max: !(state.left.max) },\n      right : { coin: state.right.coin, amount : '', fee : '' },\n  })})};\n  const setProviderCoin = (coin) => {\n    setDexState(state => {\n      return {\n        ...state,\n        provider: {\n          coin: coin,\n          amount: '',\n          maxb: false,\n          xtzamount: '',\n          maxxtzb: false,\n          liqtoken: ''\n        }\n      }\n    });\n    retrieveTokenBalance(coin);\n  };\n  const setProviderAmount = (a) => { setDexState(state => {\n    return computeMintedLQT({  /* todo compute xtzbalance and liqtoken */\n      ...state,\n      provider: {\n        coin: state.provider.coin,\n        amount: Math.max(0,a),\n        maxb: false,\n        xtzamount: (isPoolEmpty(state.provider.coin)?state.provider.xtzamount:''),\n        maxxtzb: false,\n        liqtoken: ''\n      },\n  })})};\n  const setProviderXTZAmount = (a) => {\n    if(isNaN(parseFloat(a)) || a.charAt(a.length - 1) === '.') {\n      setDexState(state => {\n        return {\n          ...state,\n          provider: {\n            coin: state.provider.coin,\n            amount: (isPoolEmpty(state.provider.coin)?state.provider.amount:''),\n            maxb: false,\n            xtzamount: a,\n            maxxtzb: false,\n            liqtoken: ''\n          }\n      }});\n    } else {\n      setDexState(state => {\n        return computeMintedLQT({\n          ...state,\n          provider: {\n            coin: state.provider.coin,\n            amount: (isPoolEmpty(state.provider.coin)?state.provider.amount:''),\n            maxb: false,\n            xtzamount: (parseFloat(a)>0?a:'0'),\n            maxxtzb: false,\n            liqtoken: ''\n          }\n    })})};\n  }\n  const switchProviderMax = (balance) => { setDexState (state => {\n    return computeMintedLQT({\n      ...state,\n      provider: {\n        coin: state.provider.coin,\n        amount : state.provider.maxb?'':balance,\n        maxb: !state.provider.maxb,\n        xtzamount: '',\n        maxxtzb: false,\n        liqtoken: ''\n      },\n  })})};\n  const switchProviderXTZMax = (balance) => { setDexState (state => {\n    return computeMintedLQT({\n      ...state,\n      provider: {\n        coin: state.provider.coin,\n        amount : '',\n        maxb: false,\n        xtzamount: state.provider.maxxtzb?'':balance,\n        maxxtzb: !state.provider.maxxtzb,\n        liqtoken: ''\n      },\n  })})};\n  const setRedeemerCoin = (coin) => {\n    setDexState(state => {\n      return {\n        ...state,\n        redeemer: {\n          coin: coin,\n          max: false,\n          liqtoken: '',\n          amount: '',\n          xtzamount: '',\n        }\n    }});\n    retrieveTokenBalance(coin);\n  };\n  const setRedeemerMax = (balance) => {setDexState(state => {\n    return computeRedeemedLQT({\n      ...state,\n      redeemer: {\n        coin: state.redeemer.coin,\n        max: !state.redeemer.max,\n        liqtoken: state.redeemer.max?'':balance,\n        amount: '',\n        xtzamount: '',\n      }\n  })})};\n  const setRedeemerAmount = (value) => {setDexState(state => {\n    return computeRedeemedLQT({\n      ...state,\n      redeemer: {\n        coin: state.redeemer.coin,\n        max: state.redeemer.max,\n        liqtoken: Math.max(0,value),\n        amount: '',\n        xtzamount: '',\n      }\n  })})};\n  const setBalance = (value) => {setDexState(state => {\n    return {\n      ...state,\n      balance : value,\n  }})};\n  return { dexState, setDexState,\n    setBalance, isReady, loadDexTokens, loadLiquidity, forceRetrieveTokenBalance,\n    resetDexCoins, resetProvider, resetRedeemer,\n    getXTZFor, setLeftCoin, setRightCoin, setLeftAmount, switchMax,\n    setProviderCoin, setProviderAmount, setProviderXTZAmount, switchProviderMax, switchProviderXTZMax,\n    setRedeemerCoin, setRedeemerMax, setRedeemerAmount };\n}\n\nexport const [ DexProvider, useDexStateContext ] = constate(useDexState);","import React from 'react';\nimport { useReady, useWallet } from '../dapp';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\n\nconst WalletButton = (props) => {\n  const ready = useReady();\n  const wallet = useWallet();\n  return ((ready) ? (\n        <div></div>\n      ) :(wallet ? (\n          <Button variant=\"contained\" color=\"secondary\"\n            disableElevation\n            size=\"small\"\n            style={{ position: 'absolute', right: '90px' }}\n            onClick={props.handleConnect}>\n            connect to wallet\n          </Button>\n        ):(\n          <Link href=\"https://thanoswallet.com/\" rel=\"noopener\" underline=\"none\" style={{\n            position: 'absolute',\n            right: '1%'\n          }}>\n            <Button variant=\"contained\" size=\"small\" disableElevation\n              style={{\n                backgroundColor: '#ed8936',\n                color: 'white',\n                fontWeight: 'bold',\n                }}>\n              Install Thanos\n            </Button>\n          </Link>\n      )));\n}\n\nexport default WalletButton;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport '../index.css';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport { useReady, useWallet } from '../dapp';\nimport WalletButton from './WalletButton';\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline';\n\n\nconst HeaderBar = (props) => {\n  const ready = useReady();\n  const wallet = useWallet();\n  const minWidth = useMediaQuery('(min-width:600px)');\n  var visible = minWidth?'visible':'hidden';\n  var dark = props.theme.palette.type === 'dark';\n  return (\n    <AppBar position=\"static\" color={dark?\"default\":\"secondary\"} style={{\n      boxShadow: \"none\",\n      opacity: 1,\n    }}>\n      <Toolbar>\n        <Typography variant=\"h6\" style={{ color: 'white', position: 'absolute', fontFamily : 'Alegreya Sans SC, sans-serif' }}>\n          Completium\n        </Typography>\n        <Grid container justify=\"center\" alignItems=\"center\">\n          <Grid item>\n            <Typography variant=\"h6\" style={{\n              visibility: visible,\n              textAlign: 'center',\n              color: 'white'\n              }}>\n              {props.appTitle}\n            </Typography>\n          </Grid>\n        </Grid>\n        <WalletButton handleConnect={props.handleConnect}/>\n        <a href=\"https://edukera.github.io/completium-landing/docs/dapp-dex/presentation\" target=\"_blank\">\n          <Button style={{ color: 'white' }} component=\"span\">\n            <HelpOutlineIcon/>\n          </Button>\n        </a>\n      </Toolbar>\n    </AppBar>\n  )\n}\n\nexport default HeaderBar","\nimport React from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport MuiAlert from '@material-ui/lab/Alert';\n\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\nconst SnackMsg = (props) => {\n    return (\n      <Snackbar open={props.open} >\n        <Alert severity=\"info\" style={{\n            backgroundColor: props.theme.palette.secondary.main\n        }}>\n          Waiting for operation confirmation ...\n        </Alert>\n      </Snackbar>)\n}\n\nexport default SnackMsg","import { useTheme } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport { useDexStateContext } from '../dexstate';\nimport { getCityName } from '../settings';\n\nconst CoinItem = (props) => {\n  const { dexState, getXTZFor } = useDexStateContext();\n  const theme = useTheme();\n  const icon = (props.name === 'XTZ')?(\n    process.env.PUBLIC_URL + \"/icons/\" + 'tezos_' + ((theme.palette.type === 'dark')?'white':'black') + '.svg'\n  ):(\n    dexState.token[props.name].iconurl\n  );\n  const name = (props.name === 'XTZ')?(\n    'Tezos'\n  ):(\n    dexState.token[props.name].name\n  );\n  return (\n    <Grid container direction='row' justify=\"flex-start\" alignItems=\"center\" spacing={0}>\n      <Grid item xs={1}>\n      <img src={icon} style={{ height: '35px', width: '35px' }}></img>\n      </Grid>\n      <Grid item xs={2} style={{ paddingLeft: (props.show)?'12px':'24px' }}>\n        <Typography style={{ textTransform: 'uppercase' }}>{props.name}</Typography>\n      </Grid>\n      <Grid item xs={3} style={{ paddingLeft: (props.show)?'0px':'24px' }}>\n        <Typography color='textSecondary'>{name}</Typography>\n      </Grid>\n      { (props.name !== 'XTZ' && props.show)? (\n        <Grid item xs={6} style={{ textAlign: 'right' }}>\n          <Typography color='textSecondary'>({\n            new Intl.NumberFormat('en-IN',{maximumFractionDigits : 6}).format(getXTZFor(props.name,1)) + ' XTZ'\n          })</Typography>\n        </Grid>\n      ) : (\n        <Grid item></Grid>\n      ) }\n    </Grid>\n  );\n}\n\n  export default CoinItem;","import { useTheme } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\n\nconst VerticialDivider = (props) => {\n    const theme = useTheme();\n    return (\n      <Grid container direction='column' justify=\"center\" alignItems=\"center\" style={{ height: '350px' }}>\n        <Grid item xs={5}>\n          <Divider orientation=\"vertical\" flexItem style={{ height: '100%' }}></Divider>\n        </Grid>\n        <Grid item>\n          <div color='disabled' style= {{\n            borderStyle: 'solid',\n            borderWidth: '1px',\n            borderRadius: '90px',\n            height: '31px',\n            width: '31px',\n            borderColor : theme.palette.divider,\n          }}>\n            <ArrowRightAltIcon style={{\n              position : 'relative',\n              top : '3px'\n            }} color=\"secondary\"/>\n          </div>\n        </Grid>\n        <Grid item xs={5}>\n          <Divider orientation=\"vertical\" flexItem style={{ height: '100%' }} ></Divider>\n        </Grid>\n      </Grid>\n    )\n  }\n\n  export default VerticialDivider;","import { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDexStateContext } from '../dexstate';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport CoinItem from './CoinItem';\nimport VerticialDivider from './VerticalDivider';\nimport { useTezos, useAccountPkh, useReady } from '../dapp';\nimport { dexContract, network } from '../settings';\nimport { OpKind, TezosToolkit } from '@taquito/taquito';\n\nconst Tezos = new TezosToolkit('https://'+network+'-tezos.giganode.io');\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst getBalanceFor = (dexState, coin) => {\n  if (coin in dexState.balances) {\n    return dexState.balances[coin];\n  } else {\n    return '';\n  }\n}\n\nconst LeftEx = (props) => {\n  const { dexState, setLeftCoin, setLeftAmount, switchMax } = useDexStateContext();\n  const xtzbalance = dexState.balance;\n  const classes = useStyles();\n  const coin = dexState.left.coin;\n  const balance = (coin === 'XTZ')?xtzbalance:getBalanceFor(dexState,coin);\n  const handleChange = (event) => {\n    setLeftCoin(event.target.value);\n  };\n  const handleCheckChange = (event) => {\n    switchMax(balance);\n  }\n  const handleAmountChange = (event) => {\n    setLeftAmount(event.target.value);\n  }\n  const cities = ['XTZ'].concat(Object.keys(dexState.token)).filter(c => { return (c === 'XTZ' || dexState.token[c].totalqty > 0)});\n  return (\n    <Grid container direction='row' spacing={4} style={{ paddingLeft: '24px' }}>\n      <Grid item xs={12}>\n        <Typography style={{ fontWeight: 'bold', paddingLeft: '12px', paddingTop: '24px' }} >From</Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel color='secondary' id=\"demo-simple-select-outlined-label\">Crypto asset</InputLabel>\n          <Select\n            color='secondary'\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={coin}\n            onChange={handleChange}\n            label=\"Crypto asset\"\n            labelWidth='200'\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            { cities.filter(city => city !== dexState.right.coin).map(city =>\n              <MenuItem value={city}><CoinItem name={city} show={true}/></MenuItem>\n            )}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12} style={{ paddingBottom: 0 }}>\n        <Grid container direction='row' alignItems=\"center\">\n          <Grid item xs={10}>\n            <Typography color='textSecondary' style={{ paddingLeft: '12px' }}>Balance: {balance} {coin}</Typography>\n          </Grid>\n          <Grid item xs={1}>\n            <Typography>Max</Typography>\n          </Grid>\n          <Grid item xs={1} style={{ textAlign: 'right' }}>\n            <Switch\n              checked={dexState.left.max}\n              onChange={handleCheckChange}\n              color=\"secondary\"\n              name=\"max\"\n              disabled={ balance === '0' }\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} style={{ paddingTop: 0 }}>\n        <TextField InputProps={{\n            readOnly: dexState.left.max,\n          }}\n          onChange={handleAmountChange}\n          value={dexState.left.amount}\n          disabled={ balance === '0' } type={(coin === 'XTZ')?\"text\":\"number\"} color='secondary' className={classes.formControl}\n          id=\"outlined-basic\"\n          label=\"Amount\"\n          variant=\"outlined\"\n          error={parseInt(dexState.left.amount) > parseInt(balance)}\n          helperText={parseInt(dexState.left.amount) > parseInt(balance)?'Cannot spend more than balance':''}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nconst RightEx = (props) => {\n  const { dexState, setRightCoin } = useDexStateContext();\n  const classes = useStyles();\n  const handleChange = (event) => {\n    setRightCoin(event.target.value);\n  };\n  const coin = dexState.right.coin;\n  const sent = (coin === 'XTZ')?parseInt(dexState.right.amount)/1000000:dexState.right.amount;\n  var exbalance = 0;\n  if (coin !== '') {\n    if (coin === 'XTZ') {\n      exbalance = dexState.token[dexState.left.coin].poolvalue / 1000000;\n    } else {\n      exbalance = dexState.token[coin].totalqty;\n    }\n  };\n  var balance = '';\n  if (coin !== '') {\n    if (coin === 'XTZ') {\n      balance = dexState.balance;\n    } else {\n      balance = getBalanceFor(dexState,coin);\n    }\n  }\n  var fee = (coin === 'XTZ' && dexState.right.fee !== '')?parseInt(dexState.right.fee)/1000000:dexState.right.fee;\n  const cities = ['XTZ'].concat(Object.keys(dexState.token)).filter(c => { return (c === 'XTZ' || dexState.token[c].totalqty > 0)});\n  return (\n    <Grid container direction='row' spacing={4} style={{ paddingRight: '24px' }}>\n      <Grid item xs={12}>\n        <Typography style={{ fontWeight: 'bold', paddingTop: '24px' }} >To</Typography>\n      </Grid>\n      <Grid item xs={12} style={{ paddingLeft: 0, paddingRight: '34px', paddingBottom: 0 }}>\n        <FormControl variant=\"outlined\" className={classes.formControl} style={{ paddingLeft: 0 }}>\n          <InputLabel color='secondary' id=\"demo-simple-select-outlined-label\">Crypto asset</InputLabel>\n          <Select\n            color='secondary'\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={coin}\n            onChange={handleChange}\n            label=\"Crypto asset\"\n            labelWidth='200'\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            { cities.filter(city => dexState.left.coin !== '' && city !== dexState.left.coin).map(city =>\n              <MenuItem value={city}><CoinItem name={city} show={true}/></MenuItem>\n            )}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12} style={{ paddingTop: 0, paddingBottom: 20 }}>\n        <Typography color='textSecondary' variant='caption'>Exchange balance: {exbalance} {coin}</Typography>\n      </Grid>\n      <Grid item xs={6} style={{ paddingBottom: '6px', paddingTop: '0px'}}>\n      <Typography color='textSecondary' style={{ paddingLeft: '0' }}>Balance: {balance} {coin}</Typography>\n      </Grid>\n      <Grid item xs={6} style={{ paddingBottom: '6px', paddingTop: '0px'}}>\n      <Typography color='textSecondary' style={{ paddingLeft: '0' }}>Fee: {fee} {coin}</Typography>\n      </Grid>\n      <Grid item xs={12} style={{ paddingTop: 0, paddingLeft: 0, paddingRight: '34px' }}>\n        <TextField InputProps={{\n            readOnly: true,\n          }}\n          value={sent}\n          type=\"number\"\n          color='secondary'\n          className={classes.formControl}\n          id=\"outlined-basic\"\n          label=\"Received amount\"\n          variant=\"outlined\"\n          error={parseInt(sent) > parseInt(exbalance)/2}\n          helperText={parseInt(sent) > parseInt(exbalance)/2?'Cannot exceed 50% of exchange balance':''} />\n      </Grid>\n    </Grid>\n  )\n}\n\nconst Exchange = (props) => {\n  const [initialized, setInititialized] = useState(false);\n  const { dexState, loadDexTokens, resetDexCoins, forceRetrieveTokenBalance, setBalance } = useDexStateContext();\n  const tezos = useTezos();\n  const account = useAccountPkh();\n  const ready = useReady();\n  const cannotExchange = () => {\n    const lcoin = dexState.left.coin;\n    const rcoin = dexState.right.coin;\n    if (lcoin === '' || rcoin === '') {\n      return !ready;\n    } else {\n      const lbalance = dexState.balances[lcoin];\n      const rbalance = (rcoin === 'XTZ')?dexState.token[lcoin].poolvalue:dexState.token[rcoin].totalqty;\n      const sent = (rcoin === 'XTZ')?parseInt(dexState.right.amount)/1000000:dexState.right.amount;\n      return (\n        dexState.right.amount === '' ||\n        parseInt(sent) > parseInt(rbalance)/2 ||\n        parseInt(dexState.left.amount) > parseInt(lbalance) ||\n        !ready\n      );\n    }\n  }\n  if (!initialized) {\n    loadDexTokens();\n    setInititialized(true);\n  }\n  async function handleExchange() {\n    const lcoin = dexState.left.coin;\n    const rcoin = dexState.right.coin;\n    const dex = await tezos.wallet.at(dexContract);\n    if (lcoin === 'XTZ') {\n      /* one transaction to dex */\n      const dex = await tezos.wallet.at(dexContract);\n      const op = await dex.methods.exchange(\n        dexState.left.coin,\n        dexState.left.amount * 1000000,\n        dexState.right.coin,\n        dexState.right.amount).send({ amount: dexState.left.amount });\n      props.openSnack();\n      resetDexCoins();\n      op.receipt().then(() => {\n        props.closeSnack();\n        loadDexTokens();\n        forceRetrieveTokenBalance(rcoin);\n        Tezos.tz\n        .getBalance(account)\n        .then((balance) => { setBalance(balance / 1000000) })\n        .catch((error) => console.log(JSON.stringify(error)));\n      })\n    } else {\n      const fa12 = await tezos.wallet.at(dexState.token[lcoin].addr);\n      const fa12params = fa12.methods.approve(dexContract,dexState.left.amount).toTransferParams();\n      fa12params.kind = OpKind.TRANSACTION;\n      const dexparams = dex.methods.exchange(\n        dexState.left.coin,\n        dexState.left.amount,\n        dexState.right.coin,\n        dexState.right.amount).toTransferParams();\n      dexparams.kind = OpKind.TRANSACTION;\n      const batch = await tezos.wallet.batch([fa12params, dexparams]);\n      const op = await batch.send();\n      props.openSnack();\n      resetDexCoins();\n      op.receipt().then(() => {\n        props.closeSnack();\n        loadDexTokens();\n        forceRetrieveTokenBalance(lcoin);\n        if (rcoin != 'XTZ') {\n          forceRetrieveTokenBalance(rcoin);\n        }\n        Tezos.tz\n        .getBalance(account)\n        .then((balance) => { setBalance(balance / 1000000) })\n        .catch((error) => console.log(JSON.stringify(error)));\n      })\n    }\n  }\n  return (\n    <Paper style={{ marginTop: '8px', minWidth: '1000px' }}>\n      <Grid container direction='row' spacing={2} alignItems=\"center\">\n        <Grid item xs={12}>\n          <Grid container direction='row' style={{ width: '100%' }}>\n            <Grid item style={{ width: '45%' }}>\n              <LeftEx/>\n            </Grid>\n            <Grid item style={{ textAlign: '-webkit-center', width: '10%' }}>\n              <VerticialDivider></VerticialDivider>\n            </Grid>\n            <Grid item style={{ width: '45%' }}>\n              <RightEx/>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item xs={12}>\n          <Divider></Divider>\n        </Grid>\n        <Grid item xs={12} style={{ textAlign: 'right', paddingRight : 24, paddingBottom : 16 }}>\n          <Button onClick={handleExchange} disabled={cannotExchange()} variant='contained' color='secondary' disableElevation>exchange</Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nexport default Exchange;","import Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport AddIcon from '@material-ui/icons/Add';\nimport { useTheme } from '@material-ui/core/styles';\n\nconst PlusDivider = (props) => {\n  const theme = useTheme();\n  return (\n    <Grid container direction='row' justify=\"center\" alignItems=\"center\" style={{ marginLeft: '8px' }}>\n      <Grid item style={{ width: '45%' }}>\n        <Divider></Divider>\n      </Grid>\n      <Grid item>\n        <div color='disabled' style= {{\n          borderStyle: 'solid',\n          borderWidth: '1px',\n          borderRadius: '90px',\n          height: '31px',\n          width: '31px',\n          borderColor : theme.palette.divider,\n        }}>\n          <AddIcon style={{\n            position : 'relative',\n            top : '3px',\n            left : '3px'\n          }} color=\"secondary\"/>\n        </div>\n      </Grid>\n      <Grid item style={{ width: '45%' }}>\n        <Divider></Divider>\n      </Grid>\n    </Grid>\n  );\n}\n\nexport default PlusDivider;","import { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDexStateContext } from '../dexstate';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport CoinItem from './CoinItem';\nimport VerticialDivider from './VerticalDivider';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useTheme } from '@material-ui/core/styles';\nimport PlusDivider from './PlusDivider';\nimport { useTezos, useAccountPkh, useReady } from '../dapp.js';\nimport { dexContract, network } from '../settings';\nimport { OpKind, TezosToolkit } from '@taquito/taquito';\n\nconst Tezos = new TezosToolkit('https://'+network+'-tezos.giganode.io');\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst getBalanceFor = (dexState, coin) => {\n  if (coin in dexState.balances) {\n    return dexState.balances[coin];\n  } else {\n    return '';\n  }\n}\n\nconst LeftEx = (props) => {\n  const { dexState, setProviderAmount, setProviderXTZAmount, switchProviderMax, switchProviderXTZMax, isPoolEmpty } = useDexStateContext();\n  const theme = useTheme();\n  const svg = 'tezos' + '_' + ((theme.palette.type === 'dark')?'white':'black') + '.svg';\n  const classes = useStyles();\n  const coin = dexState.provider.coin;\n  const balance = getBalanceFor(dexState,coin);\n  const xtzbalance = dexState.balance;\n  const handleMaxChange = (event) => {\n    switchProviderMax(balance);\n  }\n  const handleMaxXTZChange = (event) => {\n    switchProviderXTZMax(xtzbalance);\n  }\n  const handleAmountChange = (event) => {\n    setProviderAmount(event.target.value);\n  }\n  const handleXTZAmountChange = (event) => {\n    setProviderXTZAmount(event.target.value);\n  }\n  const errorAmount = parseInt(dexState.provider.amount) > ((coin !== '')?parseInt(balance):0);\n  return (\n    <Grid container direction='row' spacing={4} style={{ paddingLeft: '24px' }}>\n      <Grid item xs={12} style={{ paddingBottom: 0, marginTop: '16px' }}>\n        <Grid container direction='row' alignItems=\"center\">\n          <Grid item xs={10}>\n            <Typography color='textSecondary' style={{ paddingLeft: '12px' }}>Balance: {balance} {coin}</Typography>\n          </Grid>\n          <Grid item xs={1}>\n            <Typography>Max</Typography>\n          </Grid>\n          <Grid item xs={1} style={{ textAlign: 'right' }}>\n            <Switch\n              disabled={coin === ''}\n              checked={dexState.provider.maxb}\n              onChange={handleMaxChange}\n              color=\"secondary\"\n              name=\"max\"\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}  style={{ paddingTop: 0 }}>\n        <TextField InputProps={{\n            readOnly: dexState.provider.maxb,\n          }}\n          value={dexState.provider.amount}\n          onChange={handleAmountChange}\n          type=\"number\" color='secondary' className={classes.formControl}\n          id=\"outlined-basic\"\n          label=\"Amount\"\n          variant=\"outlined\"\n          error={errorAmount}\n          disabled={coin === ''}\n          helperText={errorAmount?'Cannot spend more than balance':''}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <PlusDivider />\n      </Grid>\n      <Grid item xs={12} style={{ paddingBottom: 0 }}>\n        <Grid container direction='row' alignItems=\"center\">\n          <Grid item xs={10}>\n            <Typography color='textSecondary' style={{ paddingLeft: '12px' }}>Balance: {xtzbalance} XTZ</Typography>\n          </Grid>\n          <Grid item xs={1}>\n            <Typography>Max</Typography>\n          </Grid>\n          <Grid item xs={1} style={{ textAlign: 'right' }}>\n            <Switch\n              checked={dexState.provider.maxxtzb}\n              onChange={handleMaxXTZChange}\n              color=\"secondary\"\n              name=\"max\"\n              disabled={ balance === '0' }\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} style={{ paddingTop: 0 }}>\n        <TextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <img src={process.env.PUBLIC_URL + \"/icons/\" + svg} style={{ height: '35px', width: '35px' }}></img>\n              </InputAdornment>\n            ),\n            readOnly: dexState.provider.maxxtzb,\n          }}\n          onChange={handleXTZAmountChange}\n          on\n          value={dexState.provider.xtzamount}\n          disabled={ balance === '0' || coin ==='' } color='secondary' className={classes.formControl}\n          id=\"outlined-basic\"\n          label=\"Amount\"\n          variant=\"outlined\"\n          error={parseInt(dexState.left.amount) > parseInt(balance)}\n          helperText={parseInt(dexState.left.amount) > parseInt(balance)?'Cannot spend more than balance':''}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nconst RightEx = (props) => {\n  const { dexState } = useDexStateContext();\n  const classes = useStyles();\n  const coin = dexState.provider.coin;\n  const balance = (coin in dexState.liquidity)?dexState.liquidity[coin]:0;\n  return (\n    <Grid container direction='row' alignItems=\"center\" spacing={4} style={{ paddingLeft: '0px', paddingRight: '44px', marginTop: '0px' }}>\n      <Grid item xs={12}>\n        <Typography style={{ fontWeight: 'bold', paddingLeft: '12px', paddingTop: '8px' }} >Liquidity Token</Typography>\n      </Grid>\n      <Grid item xs={12} style={{ paddingBottom: 0, marginTop: '36px' }}>\n        <Grid container direction='row' alignItems=\"center\">\n          <Grid item xs={10}>\n            <Typography color='textSecondary' style={{ paddingLeft: '12px' }}>Balance: {balance} LQT</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}  style={{ paddingTop: 0 }}>\n      <TextField InputProps={{\n            readOnly: true,\n          }}\n          value={dexState.provider.liqtoken}\n          type=\"number\" color='secondary' className={classes.formControl}\n          id=\"outlined-basic\"\n          label=\"Received Amount\"\n          variant=\"outlined\"\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nconst Provider = (props) => {\n  const { dexState, setProviderCoin, loadDexTokens, loadLiquidity, setBalance, resetProvider } = useDexStateContext();\n  const classes = useStyles();\n  const tezos = useTezos();\n  const ready = useReady();\n  const coin = dexState.provider.coin;\n  const handleChange = (event) => {\n    setProviderCoin(event.target.value);\n  };\n  const account = useAccountPkh();\n  const cities = Object.keys(dexState.token);\n  async function handleProvide() {\n    const fa12 = await tezos.wallet.at(dexState.token[coin].addr);\n    const dex = await tezos.wallet.at(dexContract);\n    const fa12params = fa12.methods.approve(dexContract,dexState.provider.amount).toTransferParams();\n    fa12params.kind = OpKind.TRANSACTION;\n    const dexparams = dex.methods.addLiquidity(coin,dexState.provider.amount).toTransferParams();\n    dexparams.kind = OpKind.TRANSACTION;\n    dexparams.amount = dexState.provider.xtzamount;\n    const batch = await tezos.wallet.batch([fa12params, dexparams]);\n    const op = await batch.send();\n    props.openSnack();\n    resetProvider();\n    op.receipt().then(() => {\n        props.closeSnack();\n        loadDexTokens();\n        loadLiquidity();\n        Tezos.tz\n        .getBalance(account)\n        .then((balance) => { setBalance(balance / 1000000) })\n        .catch((error) => console.log(JSON.stringify(error)));\n    })\n  };\n  return (\n    <Paper style={{ marginTop: '8px', minWidth: '1000px' }}>\n      <Grid container direction='row' spacing={2} alignItems=\"center\">\n        <Grid item xs={3} style={{ marginLeft: '24px', marginTop: '12px' }}>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel color='secondary' id=\"demo-simple-select-outlined-label\">Crypto asset pool</InputLabel>\n          <Select\n            color='secondary'\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={coin}\n            onChange={handleChange}\n            label=\"Crypto asset pool\"\n            labelWidth='200'\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            { cities.map(city =>\n              <MenuItem value={city}><CoinItem name={city} show={false}/></MenuItem>\n            )}\n          </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={6} style={{ marginLeft: '24px', marginTop: '12px' }}>\n          <Paper variant=\"outlined\" disableElevation>\n            <Grid container direction='row' alignItems=\"center\" spacing={3} style={{ padding: '13px', paddingLeft: '34px' }}>\n              <Grid item xs={4}>\n                <Typography color='textSecondary'>Pool Token balance:</Typography>\n                <Typography> {(coin !== '')?dexState.token[coin].totalqty:''} {coin}</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color='textSecondary'>Pool XTZ balance:</Typography>\n                <Typography> {(coin !== '')?dexState.token[coin].poolvalue / 1000000 + ' XTZ':''}</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color='textSecondary'>Total Liquidity Tokens:</Typography>\n                <Typography> {(coin !== '')?dexState.token[coin].totallqt + ' LQT':''}</Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container direction='row' style={{ width: '100%' }}>\n            <Grid item style={{ width: '45%' }}>\n              <LeftEx/>\n            </Grid>\n            <Grid item style={{ textAlign: '-webkit-center', width: '10%' }}>\n              <VerticialDivider></VerticialDivider>\n            </Grid>\n            <Grid item style={{ width: '45%' }}>\n              <RightEx/>\n          </Grid>\n        </Grid>\n      </Grid>\n        <Grid item xs={12}>\n          <Divider></Divider>\n        </Grid>\n        <Grid item xs={12} style={{ textAlign: 'right', paddingRight : 24, paddingBottom : 16 }}>\n          <Button onClick={handleProvide} disabled={dexState.provider.liqtoken === '' || !ready} variant='contained' color='secondary' disableElevation>provide liquidiy</Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n}\n\nexport default Provider;","import Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDexStateContext } from '../dexstate';\nimport TextField from '@material-ui/core/TextField';\nimport Switch from '@material-ui/core/Switch';\nimport CoinItem from './CoinItem';\nimport VerticialDivider from './VerticalDivider';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport { useTheme } from '@material-ui/core/styles';\nimport PlusDivider from './PlusDivider';\nimport { TezosToolkit } from '@taquito/taquito';\nimport { network, dexContract } from '../settings';\nimport { useTezos, useAccountPkh, useReady } from '../dapp';\n\nconst Tezos = new TezosToolkit('https://'+network+'-tezos.giganode.io');\n\nconst useStyles = makeStyles((theme) => ({\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: '100%',\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\nconst getBalanceFor = (dexState, coin) => {\n  if (coin in dexState.balances) {\n    return dexState.balances[coin];\n  } else {\n    return '';\n  }\n}\n\nconst LeftEx = (props) => {\n  const { dexState } = useDexStateContext();\n  const theme = useTheme();\n  const svg = 'tezos' + '_' + ((theme.palette.type === 'dark')?'white':'black') + '.svg';\n  const classes = useStyles();\n  const coin = dexState.redeemer.coin;\n  const xtzbalance = dexState.balance;\n  const balance = getBalanceFor(dexState, coin);\n  const xtzamount = dexState.redeemer.xtzamount;\n  return (\n    <Grid container direction='row' spacing={4} style={{ paddingRight: '44px', marginTop: '2px' }}>\n      <Grid item xs={12} style={{ paddingBottom: 0, marginTop: '16px' }}>\n        <Grid container direction='row' alignItems=\"center\">\n          <Grid item xs={10}>\n            <Typography color='textSecondary' style={{ paddingLeft: '12px' }}>Balance: {balance} {coin}</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}  style={{ paddingTop: 0 }}>\n      <TextField InputProps={{\n            readOnly: true,\n          }}\n          value={dexState.redeemer.amount}\n          type=\"number\" color='secondary' className={classes.formControl}\n          id=\"outlined-basic\"\n          label=\"Amount\"\n          variant=\"outlined\"\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <PlusDivider />\n      </Grid>\n      <Grid item xs={12} style={{ paddingBottom: 0 }}>\n        <Grid container direction='row' alignItems=\"center\">\n          <Grid item xs={10}>\n            <Typography color='textSecondary' style={{ paddingLeft: '12px' }}>Balance: {xtzbalance} XTZ</Typography>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} style={{ paddingTop: 0 }}>\n        <TextField\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <img src={process.env.PUBLIC_URL + \"/icons/\" + svg} style={{ height: '35px', width: '35px' }}></img>\n              </InputAdornment>\n            ),\n            readOnly: true,\n          }}\n          value={xtzamount}\n          disabled={ balance === '0' } color='secondary' className={classes.formControl}\n          id=\"outlined-basic\"\n          label=\"Amount\"\n          variant=\"outlined\"\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nconst RightEx = (props) => {\n  const { dexState, setRedeemerMax, setRedeemerAmount } = useDexStateContext();\n  const classes = useStyles();\n  const coin = dexState.redeemer.coin;\n  const balance = (coin in dexState.liquidity)?dexState.liquidity[coin]:0;\n  const handleMaxChange = (event) => {\n    setRedeemerMax(balance);\n  }\n  const handleChange = (event) => {\n    setRedeemerAmount(event.target.value);\n  }\n  return (\n    <Grid container direction='row' alignItems=\"center\" spacing={4} style={{ paddingLeft: '24px', paddingRight: '0px', marginTop: '0px' }}>\n      <Grid item xs={12}>\n        <Typography style={{ fontWeight: 'bold', paddingLeft: '12px', paddingTop: '8px' }} >Liquidity Token</Typography>\n      </Grid>\n      <Grid item xs={12} style={{ paddingBottom: 0, marginTop: '24px' }}>\n        <Grid container direction='row' alignItems=\"center\">\n          <Grid item xs={10}>\n            <Typography color='textSecondary' style={{ paddingLeft: '12px' }}>Balance: {balance} LQT</Typography>\n          </Grid>\n          <Grid item xs={1}>\n            <Typography>Max</Typography>\n          </Grid>\n          <Grid item xs={1} style={{ textAlign: 'right' }}>\n            <Switch\n              checked={dexState.redeemer.max}\n              onChange={handleMaxChange}\n              color=\"secondary\"\n              name=\"max\"\n              disabled={ balance === '0' }\n            />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12}  style={{ paddingTop: 0 }}>\n        <TextField\n          value={dexState.redeemer.liqtoken}\n          onChange={ handleChange }\n          type=\"number\" color='secondary' className={classes.formControl}\n          id=\"outlined-basic\"\n          label=\"LQT Amount\"\n          variant=\"outlined\"\n          error={dexState.redeemer.liqtoken > balance}\n          helperText={dexState.redeemer.liqtoken > balance?'Cannot redeem more than balance':''}\n          disabled={coin === ''}\n        />\n      </Grid>\n    </Grid>\n  )\n}\n\nconst Redeemer = (props) => {\n  const { dexState, setRedeemerCoin, resetRedeemer, loadDexTokens, loadLiquidity, setBalance } = useDexStateContext();\n  const classes = useStyles();\n  const account = useAccountPkh();\n  const tezos = useTezos();\n  const ready = useReady();\n  const coin = dexState.redeemer.coin;\n  const handleChange = (event) => {\n      setRedeemerCoin(event.target.value);\n  };\n  async function handleRedeem() {\n    const dex = await tezos.wallet.at(dexContract);\n    const op = await dex.methods.removeLiquidity(coin,dexState.redeemer.amount).send();\n    props.openSnack();\n    resetRedeemer();\n    op.receipt().then(() => {\n        props.closeSnack();\n        loadDexTokens();\n        loadLiquidity();\n        Tezos.tz\n        .getBalance(account)\n        .then((balance) => { setBalance(balance / 1000000) })\n        .catch((error) => console.log(JSON.stringify(error)));\n    })\n  };\n  const cities = Object.keys(dexState.token);\n  return (\n    <Paper style={{ marginTop: '8px', minWidth: '1000px' }}>\n      <Grid container direction='row' spacing={2} alignItems=\"center\">\n        <Grid item xs={3} style={{ marginLeft: '24px', marginTop: '12px' }}>\n          <FormControl variant=\"outlined\" className={classes.formControl}>\n          <InputLabel color='secondary' id=\"demo-simple-select-outlined-label\">Crypto asset pool</InputLabel>\n          <Select\n            color='secondary'\n            labelId=\"demo-simple-select-outlined-label\"\n            id=\"demo-simple-select-outlined\"\n            value={coin}\n            onChange={handleChange}\n            label=\"Crypto asset pool\"\n            labelWidth='200'\n          >\n            <MenuItem value=\"\">\n              <em>None</em>\n            </MenuItem>\n            { cities.map(city =>\n              <MenuItem value={city}><CoinItem name={city} show={false}/></MenuItem>\n            )}\n          </Select>\n          </FormControl>\n        </Grid>\n        <Grid item xs={6} style={{ marginLeft: '24px', marginTop: '12px' }}>\n          <Paper variant=\"outlined\" disableElevation>\n            <Grid container direction='row' alignItems=\"center\" spacing={3} style={{ padding: '13px', paddingLeft: '34px' }}>\n              <Grid item xs={4}>\n                <Typography color='textSecondary'>Pool Token balance:</Typography>\n                <Typography> {(coin !== '')?dexState.token[coin].totalqty:''} {coin}</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color='textSecondary'>Pool XTZ balance:</Typography>\n                <Typography> {(coin !== '')?dexState.token[coin].poolvalue / 1000000 + ' XTZ':''}</Typography>\n              </Grid>\n              <Grid item xs={4}>\n                <Typography color='textSecondary'>Total Liquidity Tokens:</Typography>\n                <Typography> {(coin !== '')?dexState.token[coin].totallqt + ' LQT':''}</Typography>\n              </Grid>\n            </Grid>\n          </Paper>\n        </Grid>\n        <Grid item xs={12}>\n          <Grid container direction='row' style={{ width: '100%' }}>\n            <Grid item style={{ width: '45%' }}>\n              <RightEx/>\n            </Grid>\n            <Grid item style={{ textAlign: '-webkit-center', width: '10%' }}>\n              <VerticialDivider></VerticialDivider>\n            </Grid>\n            <Grid item style={{ width: '45%' }}>\n              <LeftEx/>\n          </Grid>\n        </Grid>\n      </Grid>\n        <Grid item xs={12}>\n          <Divider></Divider>\n        </Grid>\n        <Grid item xs={12} style={{ textAlign: 'right', paddingRight : 24, paddingBottom : 16 }}>\n          <Button onClick={handleRedeem} disabled={!ready || dexState.redeemer.amount === ''} variant='contained' color='secondary' disableElevation>redeem liquidiy</Button>\n        </Grid>\n      </Grid>\n    </Paper>\n  )\n  }\n\n  export default Redeemer;","import './App.css';\nimport React, { useState } from 'react';\nimport { DAppProvider, useConnect, useAccountPkh, useReady } from './dapp.js';\nimport { DexProvider, useDexStateContext } from './dexstate';\nimport { appName, appTitle, network } from './settings';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport HeaderBar from './components/HeaderBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport SnackMsg from './components/SnackMsg';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Exchange from './components/Dex';\nimport Provider from './components/Provider';\nimport Redeemer from './components/Redeemer';\nimport { TezosToolkit } from '@taquito/taquito';\n\nconst Tezos = new TezosToolkit('https://'+network+'-tezos.giganode.io');\n\nfunction App() {\n  return (\n    <DAppProvider appName={appName}>\n      <DexProvider>\n        <React.Suspense fallback={null}>\n            <PageRouter />\n        </React.Suspense>\n      </DexProvider>\n    </DAppProvider>\n  );\n}\n\nconst getComponent = (value, openSnack, closeSnack) => {\n  switch (value) {\n    case 0: return <Exchange openSnack={openSnack} closeSnack={closeSnack}/>;\n    case 1: return <Provider openSnack={openSnack} closeSnack={closeSnack}/>;\n    case 2: return <Redeemer openSnack={openSnack} closeSnack={closeSnack}/>;\n    default: return <div></div>;\n  }\n}\n\nconst PageRouter = () => {\n  const [viewSnack, setViewSnack] = useState(false);\n  const [initialized, setInitialized] = useState(false);\n  const [computeBalance, setComputeBalance] = useState(false);\n  const [value, setValue] = React.useState(0);\n  const account = useAccountPkh();\n  const ready = useReady();\n  const { setBalance, loadLiquidity } = useDexStateContext();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  var connect = useConnect();\n  const prefersDarkMode = false; /* useMediaQuery('(prefers-color-scheme: dark)'); */\n  const handleConnect = React.useCallback(async () => {\n    try {\n      await connect(network);\n      setComputeBalance(true);\n    } catch (err) {\n      alert(err.message);\n    };\n  }, [connect]);\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: prefersDarkMode ? 'dark' : 'light',\n          secondary: {\n            light: prefersDarkMode ? '#4b85f2' :'#26457c',\n            main: prefersDarkMode ? '#4681f0' : '#162b52',\n            dark: prefersDarkMode ? '#3361b8' :'#14233f',\n            contrastText: '#fff',\n          }\n        },\n      }),\n    [prefersDarkMode],\n  );\n  const openSnack = () => {\n    setViewSnack(true);\n  }\n  const closeSnack = () => {\n    setViewSnack(false);\n  }\n  if (account !== null && !initialized) {\n    loadLiquidity();\n    setInitialized(true);\n  }\n  if (ready && computeBalance) {\n    Tezos.tz\n      .getBalance(account)\n      .then((balance) => { setBalance(balance / 1000000) })\n      .catch((error) => console.log(JSON.stringify(error)));\n    setComputeBalance(false);\n  }\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <HeaderBar appTitle={appTitle} handleConnect={handleConnect} theme={theme} />\n      <Container>\n        <Tabs\n          value={value}\n          indicatorColor=\"secondary\"\n          textColor={ prefersDarkMode ? \"default\" : \"secondary\"}\n          onChange={handleChange}\n          aria-label=\"disabled tabs example\"\n          style={{ marginTop: '10px' }}\n        >\n          <Tab label=\"Exchange\" />\n          <Tab label=\"Provide Liquidity\"/>\n          <Tab label=\"Redeem Liquidity\"/>\n          <Tab label=\"History\" disabled />\n        </Tabs>\n        { getComponent(value, openSnack, closeSnack) }\n      </Container>\n      <SnackMsg open={viewSnack} theme={theme} />\n    </ThemeProvider>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}